/*
 * Copyright (c) 2022 by William F. Gilreath (will@zepton.xyz)
 * All rights reserved.
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 3 as published
 * by the Free Software Foundation.  
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 3 for more details. The license is available at the following 
 * link:  https://www.gnu.org/licenses/gpl-3.0.txt.
 *
 */
package xyz.zepton.zeptor.gui;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;

import javax.swing.WindowConstants;

import xyz.zepton.zeptor.editor.Zeptor;

@SuppressWarnings("serial")
public final class CompilerOptions extends javax.swing.JFrame {

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupBuild;

    private javax.swing.ButtonGroup buttonGroupError;

    private final Zeptor edit;

    private javax.swing.JButton jButtonOK;

    private javax.swing.JCheckBox jCheckBoxDump;

    private javax.swing.JCheckBox jCheckBoxEcho;

    private javax.swing.JCheckBox jCheckBoxPanic;

    private javax.swing.JCheckBox jCheckBoxTime;

    private javax.swing.JLabel jLabelBrief;

    private javax.swing.JLabel jLabelDebug;

    private javax.swing.JLabel jLabelDump;

    private javax.swing.JLabel jLabelEcho;

    private javax.swing.JLabel jLabelHush;

    private javax.swing.JLabel jLabelMute;

    private javax.swing.JLabel jLabelNone;

    private javax.swing.JLabel jLabelOutputPath;
    private javax.swing.JLabel jLabelPanic;
    private javax.swing.JLabel jLabelRelease;
    private javax.swing.JLabel jLabelTime;
    private javax.swing.JPanel jPanelBuild;
    private javax.swing.JPanel jPanelButtonOK;
    private javax.swing.JPanel jPanelCompiler;
    private javax.swing.JPanel jPanelError;
    private javax.swing.JPanel jPanelOutputDir;
    private javax.swing.JRadioButton jRadioButtonBrief;
    private javax.swing.JRadioButton jRadioButtonDebug;
    private javax.swing.JRadioButton jRadioButtonHush;
    private javax.swing.JRadioButton jRadioButtonMute;
    private javax.swing.JRadioButton jRadioButtonNone;
    private javax.swing.JRadioButton jRadioButtonRelease;
    private javax.swing.JTextField jTextFieldOutputPath;
    // End of variables declaration//GEN-END:variables
    /**
     * Creates new form CompilerOptionsZeptoN
     */
    public CompilerOptions(final Zeptor zeptor) {
        this.edit = zeptor;
        initComponents();

        this.buttonGroupBuild.add(this.jRadioButtonDebug); //build settings
        this.buttonGroupBuild.add(this.jRadioButtonRelease);

        this.buttonGroupError.add(this.jRadioButtonBrief); //error settings
        this.buttonGroupError.add(this.jRadioButtonHush);
        this.buttonGroupError.add(this.jRadioButtonMute);
        this.buttonGroupError.add(this.jRadioButtonNone);

        //initialize default compiler settings initDefaultValues();
        this.jTextFieldOutputPath.setText(Zeptor.outputPath);
        this.jCheckBoxDump.setSelected(this.edit.dumpFlag);
        this.jCheckBoxEcho.setSelected(this.edit.echoFlag);
        this.jCheckBoxPanic.setSelected(this.edit.panicFlag);
        this.jCheckBoxTime.setSelected(this.edit.timeFlag);

        this.jRadioButtonBrief.setSelected(this.edit.briefFlag);
        this.jRadioButtonHush.setSelected(this.edit.hushFlag);
        this.jRadioButtonMute.setSelected(this.edit.muteFlag);
        this.jRadioButtonRelease.setSelected(this.edit.finalFlag);

        //center dialog on screen
        Dimension d1 = this.getSize();
        Dimension d2 = Toolkit.getDefaultToolkit().getScreenSize();
        int w1 = (int) d1.getWidth();
        int h1 = (int) d1.getHeight();
        int w2 = (int) d2.getWidth();
        int h2 = (int) d2.getHeight();
        this.setLocation(new Point((w2 - w1) / 2, (h2 - h1) / 2));

        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupBuild = new javax.swing.ButtonGroup();
        buttonGroupError = new javax.swing.ButtonGroup();
        jPanelBuild = new javax.swing.JPanel();
        jRadioButtonDebug = new javax.swing.JRadioButton();
        jRadioButtonRelease = new javax.swing.JRadioButton();
        jLabelDebug = new javax.swing.JLabel();
        jLabelRelease = new javax.swing.JLabel();
        jPanelCompiler = new javax.swing.JPanel();
        jCheckBoxDump = new javax.swing.JCheckBox();
        jCheckBoxEcho = new javax.swing.JCheckBox();
        jCheckBoxPanic = new javax.swing.JCheckBox();
        jCheckBoxTime = new javax.swing.JCheckBox();
        jLabelDump = new javax.swing.JLabel();
        jLabelEcho = new javax.swing.JLabel();
        jLabelPanic = new javax.swing.JLabel();
        jLabelTime = new javax.swing.JLabel();
        jPanelError = new javax.swing.JPanel();
        jRadioButtonBrief = new javax.swing.JRadioButton();
        jRadioButtonHush = new javax.swing.JRadioButton();
        jRadioButtonMute = new javax.swing.JRadioButton();
        jRadioButtonNone = new javax.swing.JRadioButton();
        jLabelBrief = new javax.swing.JLabel();
        jLabelHush = new javax.swing.JLabel();
        jLabelMute = new javax.swing.JLabel();
        jLabelNone = new javax.swing.JLabel();
        jPanelOutputDir = new javax.swing.JPanel();
        jLabelOutputPath = new javax.swing.JLabel();
        jTextFieldOutputPath = new javax.swing.JTextField();
        jPanelButtonOK = new javax.swing.JPanel();
        jButtonOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);

        jPanelBuild.setBorder(javax.swing.BorderFactory.createTitledBorder("Build Settings"));

        jRadioButtonDebug.setSelected(true);
        jRadioButtonDebug.setText("Debug");
        jRadioButtonDebug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDebugActionPerformed(evt);
            }
        });

        jRadioButtonRelease.setText("Release");
        jRadioButtonRelease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonReleaseActionPerformed(evt);
            }
        });

        jLabelDebug.setText("- Compile debug release with debugging information.");

        jLabelRelease.setText("- Compile final release without debugging information.");

        javax.swing.GroupLayout jPanelBuildLayout = new javax.swing.GroupLayout(jPanelBuild);
        jPanelBuild.setLayout(jPanelBuildLayout);
        jPanelBuildLayout.setHorizontalGroup(
                jPanelBuildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelBuildLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelBuildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanelBuildLayout.createSequentialGroup()
                                                .addComponent(jRadioButtonDebug)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabelDebug))
                                        .addGroup(jPanelBuildLayout.createSequentialGroup()
                                                .addComponent(jRadioButtonRelease)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabelRelease)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBuildLayout.setVerticalGroup(
                jPanelBuildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelBuildLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelBuildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jRadioButtonDebug)
                                        .addComponent(jLabelDebug))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelBuildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jRadioButtonRelease)
                                        .addComponent(jLabelRelease)))
        );

        jPanelCompiler.setBorder(javax.swing.BorderFactory.createTitledBorder("Compiler Settings"));

        jCheckBoxDump.setText("Dump");
        jCheckBoxDump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDumpActionPerformed(evt);
            }
        });

        jCheckBoxEcho.setText("Echo");
        jCheckBoxEcho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxEchoActionPerformed(evt);
            }
        });

        jCheckBoxPanic.setText("Panic");
        jCheckBoxPanic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxPanicActionPerformed(evt);
            }
        });

        jCheckBoxTime.setText("Time");
        jCheckBoxTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxTimeActionPerformed(evt);
            }
        });

        jLabelDump.setText("- Dump raw transpiled Java source to '.java' file.");

        jLabelEcho.setText("- Print ZeptoN compiler options and success or failure.");

        jLabelPanic.setText("- Panic on any error and terminate compilation.");

        jLabelTime.setText("- Print total time for success compiling of a source file.");

        javax.swing.GroupLayout jPanelCompilerLayout = new javax.swing.GroupLayout(jPanelCompiler);
        jPanelCompiler.setLayout(jPanelCompilerLayout);
        jPanelCompilerLayout.setHorizontalGroup(
                jPanelCompilerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelCompilerLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanelCompilerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCheckBoxDump)
                                        .addComponent(jCheckBoxEcho)
                                        .addComponent(jCheckBoxPanic)
                                        .addComponent(jCheckBoxTime))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelCompilerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelTime)
                                        .addComponent(jLabelPanic)
                                        .addComponent(jLabelEcho)
                                        .addComponent(jLabelDump))
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelCompilerLayout.setVerticalGroup(
                jPanelCompilerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelCompilerLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelCompilerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jCheckBoxDump)
                                        .addComponent(jLabelDump))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelCompilerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jCheckBoxEcho)
                                        .addComponent(jLabelEcho))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelCompilerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jCheckBoxPanic)
                                        .addComponent(jLabelPanic))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelCompilerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jCheckBoxTime)
                                        .addComponent(jLabelTime))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelError.setBorder(javax.swing.BorderFactory.createTitledBorder("Error Settings"));

        jRadioButtonBrief.setText("Brief");
        jRadioButtonBrief.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonBriefActionPerformed(evt);
            }
        });

        jRadioButtonHush.setText("Hush");
        jRadioButtonHush.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonHushActionPerformed(evt);
            }
        });

        jRadioButtonMute.setText("Mute");
        jRadioButtonMute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMuteActionPerformed(evt);
            }
        });

        jRadioButtonNone.setSelected(true);
        jRadioButtonNone.setText("None");
        jRadioButtonNone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonNoneActionPerformed(evt);
            }
        });

        jLabelBrief.setText("- Print only a brief count of compiler messages.");

        jLabelHush.setText("- Disable all compiler messages except errors.");

        jLabelMute.setText("- Disable all compiler messages.");

        jLabelNone.setText("- Report all compiler messages.");

        javax.swing.GroupLayout jPanelErrorLayout = new javax.swing.GroupLayout(jPanelError);
        jPanelError.setLayout(jPanelErrorLayout);
        jPanelErrorLayout.setHorizontalGroup(
                jPanelErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelErrorLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanelErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanelErrorLayout.createSequentialGroup()
                                                .addComponent(jRadioButtonNone)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabelNone))
                                        .addGroup(jPanelErrorLayout.createSequentialGroup()
                                                .addComponent(jRadioButtonMute)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabelMute))
                                        .addGroup(jPanelErrorLayout.createSequentialGroup()
                                                .addGroup(jPanelErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jRadioButtonHush)
                                                        .addComponent(jRadioButtonBrief))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanelErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabelBrief)
                                                        .addComponent(jLabelHush))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelErrorLayout.setVerticalGroup(
                jPanelErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelErrorLayout.createSequentialGroup()
                                .addGroup(jPanelErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jRadioButtonBrief)
                                        .addComponent(jLabelBrief))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jRadioButtonHush)
                                        .addComponent(jLabelHush))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jRadioButtonMute)
                                        .addComponent(jLabelMute))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                                .addGroup(jPanelErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jRadioButtonNone)
                                        .addComponent(jLabelNone))
                                .addContainerGap())
        );

        jPanelOutputDir.setBorder(javax.swing.BorderFactory.createTitledBorder("Working Directory"));

        jLabelOutputPath.setText("Path: ");

        jTextFieldOutputPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldOutputPathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelOutputDirLayout = new javax.swing.GroupLayout(jPanelOutputDir);
        jPanelOutputDir.setLayout(jPanelOutputDirLayout);
        jPanelOutputDirLayout.setHorizontalGroup(
                jPanelOutputDirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelOutputDirLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabelOutputPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldOutputPath, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE))
        );
        jPanelOutputDirLayout.setVerticalGroup(
                jPanelOutputDirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelOutputDirLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelOutputDirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelOutputPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextFieldOutputPath))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelButtonOK.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelButtonOKLayout = new javax.swing.GroupLayout(jPanelButtonOK);
        jPanelButtonOK.setLayout(jPanelButtonOKLayout);
        jPanelButtonOKLayout.setHorizontalGroup(
                jPanelButtonOKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelButtonOKLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonOK, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelButtonOKLayout.setVerticalGroup(
                jPanelButtonOKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelButtonOKLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButtonOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanelBuild, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanelError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanelOutputDir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanelButtonOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanelCompiler, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanelBuild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanelCompiler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanelError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanelOutputDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanelButtonOK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        Zeptor.outputPath = this.jTextFieldOutputPath.getText();

        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButtonOKActionPerformed
    private void jCheckBoxDumpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDumpActionPerformed
        this.edit.dumpFlag = this.jCheckBoxDump.isSelected();

    }//GEN-LAST:event_jCheckBoxDumpActionPerformed
    private void jCheckBoxEchoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxEchoActionPerformed
        this.edit.echoFlag = this.jCheckBoxEcho.isSelected();
    }//GEN-LAST:event_jCheckBoxEchoActionPerformed
    private void jCheckBoxPanicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxPanicActionPerformed
        this.edit.panicFlag = this.jCheckBoxPanic.isSelected();

    }//GEN-LAST:event_jCheckBoxPanicActionPerformed
    private void jCheckBoxTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxTimeActionPerformed
        this.edit.timeFlag = this.jCheckBoxTime.isSelected();

    }//GEN-LAST:event_jCheckBoxTimeActionPerformed
    private void jRadioButtonBriefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonBriefActionPerformed
        this.edit.briefFlag = this.jRadioButtonBrief.isSelected();

    }//GEN-LAST:event_jRadioButtonBriefActionPerformed
    private void jRadioButtonDebugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDebugActionPerformed
        this.edit.finalFlag = !this.jRadioButtonDebug.isSelected();

    }//GEN-LAST:event_jRadioButtonDebugActionPerformed
    private void jRadioButtonHushActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonHushActionPerformed
        this.edit.hushFlag = this.jRadioButtonHush.isSelected();

    }//GEN-LAST:event_jRadioButtonHushActionPerformed
    private void jRadioButtonMuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMuteActionPerformed
        this.edit.muteFlag = this.jRadioButtonMute.isSelected();

    }//GEN-LAST:event_jRadioButtonMuteActionPerformed
    private void jRadioButtonNoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonNoneActionPerformed
        this.edit.briefFlag = false;
        this.edit.hushFlag = false;
        this.edit.muteFlag = false;

    }//GEN-LAST:event_jRadioButtonNoneActionPerformed
    private void jRadioButtonReleaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonReleaseActionPerformed
        this.edit.finalFlag = this.jRadioButtonRelease.isSelected();

    }//GEN-LAST:event_jRadioButtonReleaseActionPerformed
    private void jTextFieldOutputPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldOutputPathActionPerformed
        Zeptor.outputPath = this.jTextFieldOutputPath.getText();

    }//GEN-LAST:event_jTextFieldOutputPathActionPerformed
}
